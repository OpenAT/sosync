//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebSosync.Data.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebSosync.Data.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- sosync2: Archiving part 1
        ///SET enable_seqscan = OFF;
        ///SET enable_hashagg = OFF;
        ///SET enable_hashjoin = OFF;
        ///SET enable_mergejoin = OFF;
        ///with recursive to_be_moved as (
        ///			-- roots
        ///			select id, parent_job_id from (
        ///				select id, parent_job_id
        ///				from sosync_job
        ///				where
        ///					parent_job_id is null
        ///					and job_state in (&apos;done&apos;, &apos;skipped&apos;)
        ///					and job_closed_by_job_id is null
        ///				order by id asc
        ///				limit 100
        ///			) first_parent
        ///
        ///			union all
        ///
        ///			-- children
        ///			select child.id, child.pa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Archive_finished_SyncJobs {
            get {
                return ResourceManager.GetString("Archive_finished_SyncJobs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- sosync2: Archiving part 2
        ///SET enable_seqscan = OFF;
        ///SET enable_hashagg = OFF;
        ///SET enable_hashjoin = OFF;
        ///SET enable_mergejoin = OFF;
        ///with recursive to_be_moved as (
        ///			-- roots
        ///			select id, parent_job_id from (
        ///				select id, parent_job_id
        ///				from sosync_job
        ///				where
        ///					parent_job_id is null
        ///					and job_state in (&apos;done&apos;, &apos;skipped&apos;)
        ///					and job_closed_by_job_id is not null
        ///				order by id asc
        ///				limit 100
        ///			) first_parent
        ///
        ///			union all
        ///
        ///			-- children
        ///			select child.id, chil [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Archive_finished_SyncJobs_Part_2 {
            get {
                return ResourceManager.GetString("Archive_finished_SyncJobs_Part_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- sosync2: Check sosync_job error and retry count
        ///select
        ///	true
        ///from
        ///	sosync_job
        ///where
        ///	job_source_record_id = @id
        ///	and job_source_model = @model
        ///	and job_state in (&apos;new&apos;, &apos;error&apos;, &apos;error_retry&apos;)
        ///limit 1.
        /// </summary>
        internal static string CheckModelQuery {
            get {
                return ResourceManager.GetString("CheckModelQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to with updated_rows as (
        ///	update sosync_job
        ///	set
        ///		job_state = &apos;skipped&apos;
        ///		,job_log = @job_log
        ///		,job_closed_by_job_id = @job_closed_by_job_id
        ///		,write_date = @write_date
        ///		,job_start = now() at time zone &apos;utc&apos;
        ///		,job_end = now() at time zone &apos;utc&apos;
        ///	where
        ///		job_source_sosync_write_date &lt; @job_source_sosync_write_date
        ///		and job_source_system = @job_source_system
        ///		and job_source_model = @job_source_model
        ///		and job_source_record_id = @job_source_record_id
        ///		and job_state in (&apos;new&apos;, &apos;error&apos;, &apos;error [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClosePreviousJobs_Update_SCRIPT {
            get {
                return ResourceManager.GetString("ClosePreviousJobs_Update_SCRIPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to with recursive job as (
        ///	-- roots
        ///	select * from (
        ///		select *
        ///		from sosync_job
        ///		where parent_job_id is null and job_state in (&apos;new&apos;, &apos;inprogress&apos;) and create_date + interval &apos;5 seconds&apos; &lt; current_timestamp
        ///        order by job_state, job_priority desc, job_date desc
        ///        limit %LIMIT%
        ///	) first_parent
        ///
        ///	union all
        ///	
        ///	-- children
        ///	select child.*
        ///	from sosync_job child
        ///	inner join job parent on parent.id = child.parent_job_id
        ///)
        ///select * from job order by job_priority desc, job_date asc;.
        /// </summary>
        internal static string GetFirstOpenSynJobAndChildren_SELECT {
            get {
                return ResourceManager.GetString("GetFirstOpenSynJobAndChildren_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH target AS (
        ///	SELECT * FROM fson.product_template_zGruppeDetail
        ///	WHERE product_templateID = @product_templateID
        ///)
        ///MERGE target
        ///USING (
        ///	SELECT zGruppeDetailID
        ///	FROM #temp_table_name
        ///) AS source
        ///ON
        ///	(source.zGruppeDetailID = target.zGruppeDetailID)
        ///
        ///WHEN NOT MATCHED THEN
        ///	INSERT (product_templateID, zGruppeDetailID)
        ///	VALUES (@product_templateID, source.zGruppeDetailID)
        ///
        ///WHEN NOT MATCHED BY SOURCE THEN
        ///	DELETE
        ///;.
        /// </summary>
        internal static string MSSQL_Merge_ProductTemplateGroups {
            get {
                return ResourceManager.GetString("MSSQL_Merge_ProductTemplateGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH target AS (
        ///	SELECT * FROM fson.sale_order_line_zGruppeDetail
        ///	WHERE sale_order_lineID = @sale_order_lineID
        ///)
        ///MERGE target
        ///USING (
        ///	SELECT zGruppeDetailID
        ///	FROM #temp_table_name
        ///) AS source
        ///ON
        ///	(source.zGruppeDetailID = target.zGruppeDetailID)
        ///
        ///WHEN NOT MATCHED THEN
        ///	INSERT (sale_order_lineID, zGruppeDetailID)
        ///	VALUES (@sale_order_lineID, source.zGruppeDetailID)
        ///
        ///WHEN NOT MATCHED BY SOURCE THEN
        ///	DELETE
        ///;.
        /// </summary>
        internal static string MSSQL_Merge_SaleOrderGroups {
            get {
                return ResourceManager.GetString("MSSQL_Merge_SaleOrderGroups", resourceCulture);
            }
        }
    }
}
